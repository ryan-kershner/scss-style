// Mixins

// Clearfix - http://nicolasgallagher.com/micro-clearfix-hack/

  %clearfix {

    &:before, &:after {
      content: " ";
      display: table;
    }

    &:after {
      clear: both;
    }
  }

// Visibility

  // No keyboard navigation, use in place of "display: none" for transitions

  %visuallyGone {
    height: 0;
    opacity: 0;
    visibility: hidden;
  }

  %visuallyBack {
    height: auto;
    opacity: 1;
    visibility: visible;
  }

  // https://github.com/modeset/underoos/blob/master/app/assets/stylesheets/mixins/_visibility.sass

  %visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    position: absolute;
    overflow: hidden;
    margin: -1px;
    padding: 0;
    width: 1px;
    height: 1px;
  }

  %visuallyshown {
    clip: auto !important;
    clip: rect(auto auto auto auto);
    position: absolute;
    overflow: visible;
    margin: 0;
    width: auto;
    height: auto;
  }

// use for replacing text with a background image
  @mixin hiddenText {
    font: 0/0 a;
    text-shadow: none;
    color: transparent;
  }

// Grid...?

  @mixin layoutFull {
    margin: 0 auto;
    max-width: 1920px;
    padding: 1rem 2%;
  }

  @mixin layoutMain {
    margin: 0 auto;
    max-width: 1920px;
    padding: 1.5rem 20%;

    @include bp(mama-bear) {
      @include layoutFull;
    }
    @include bp(tiny-bear) {
      padding: 1rem 5%;
    }
  }

  @mixin layoutSecondary {
    transform: translateX(230%);
    width: 30%;

    @include bp(mama-bear) {
      @include layoutFull;
      transform: none;
    }
  }


// Media Query Breakpoints

  // http://css-tricks.com/conditional-media-query-mixins/
  @mixin bp($point) {

    $bp-tinybear: "(max-width: 405px)";
    $bp-babybear: "(max-width: 750px)";
    $bp-lazybear: "(max-width: 992px)";
    $bp-mamabear: "(max-width: 1250px)";
    $bp-papabear: "(max-width: 1600px)";

    @if $point == papa-bear {
      @media #{$bp-papabear} { @content; }
    }
    @else if $point == mama-bear {
      @media #{$bp-mamabear} { @content; }
    }
    @else if $point == baby-bear {
      @media #{$bp-babybear}  { @content; }
    }
    @else if $point == lazy-bear {
      @media #{$bp-lazybear}  { @content; }
    }
    @else if $point == tiny-bear {
      @media #{$bp-tinybear}  { @content; }
    }
  }


//triangles

@mixin triangle($dir, $size, $color) {
    border: $size transparent solid;
    content: ' ';

    @if ($dir == "top" or $dir == "up") {
        border-bottom-color: $color;
    }
    @else if ($dir == "right" or $dir == "after") {
        border-left-color: $color;
    }
    @else if ($dir == "bottom" or $dir == "down") {
        border-top-color: $color;
    }
    @else if ($dir == "left" or $dir == "before") {
        border-right-color: $color;
    }
}

@mixin hideAfter($numberOfLi){
    &:nth-child(n+#{$numberOfLi}):not(:nth-last-child(-n+1)) {
      display: none;
    }
}


@mixin blueBox{
  border: 2px solid $blueDark;
  display: block;
  margin: 20rem auto 0;
  padding: 1rem;
  width: 15%;

  h1 {
    color:$blueDark;
  }

  a {
    text-decoration: underline;
  }
}

@mixin greenBox{
  border: 2px solid $green;
  display: block;
  margin: 20rem auto 0;
  padding: 1rem;
  width: 15%;

  h1 {
    color:$green;
  }

  a {
    text-decoration: underline;
  }
}
